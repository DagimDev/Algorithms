Steps to follow when solving algorithmic problem
• 1. Understand the problem statement
    ▪ You can’t solve a problem you don’t understand.
    ▪ Read the problem as many times as possible until you understand every word used
within the problem
    ▪ Use your own words to describe the problem.
    ▪ Try explaining the problem to a friend and see if their understanding of your
explanation matches the problem

2. Hand-write the solution or solve it on paper first
    ▪ Take out a piece of paper and work through the problem manually. If needed, make
a drawing depicting the problem
    ▪ Use all the important information available in the problem
    ▪ Use example cases/sample data to make sure that you can solve the problem on
paper
    ▪ NOTE: The most difficult part for newcomers is not actually solving the problem.
The difficulty is in understanding and identifying the smallest steps the brain takes
to solve the problem. Our brain is sometimes too fast for us to comprehend


3. Craft a general step that can be followed to solve any kind of similar problem
    ▪ This is where you would consider scenarios that might not have been covered in
the examples you solved above and tweak the solution accordingly
    ▪ Have you solved any similar problem? If so, take advantage of that experience and
its information
    ▪ See if you can reduce any steps or if you are repeating any steps
    ▪ Eliminate redundant or unnecessary data


4. Write the pseudo code line by line
    ▪ Writing out pseudocode that you can translate into code will help with defining the
structure of your code and make coding a lot easier
    ▪ Pseudocode is a simpler version of a programming code in plain English which
uses short phrases to write code for a program before it is implemented in a specific
programming language.
    ▪ Simplify the problem by dividing it into simpler cases and pick what JavaScript
functionality you need to use to cover that case
    ▪ Pseudocode generally does not actually have specific rules but sometimes, you
might end up including some syntax from JavaScript. Don’t get caught up with the
syntax. Focus on the logic and steps.
    ▪ Look at these two pseudocode examples for a function that returns only even
numbers from an array:
    • Example 1, pseudocode that has more words
        function selectEvenNumbers
        create a variable with an empty array called evenNumbers to store
        the selected even numbers from the original array
        for each element in that array
        see if that element is even
        if element is even (if the remainder is 0 when divided by 2),
        add/push that to the array evenNumbers
        return evenNumbers
• Example 2, pseudocode that less more words
    function selectEvenNumbers
    evenNumbers = []
    for i = 0 to i = length of the original array
    if (element % 2 === 0)
    Add/push that to the array called evenNumbers
    return evenNumbers